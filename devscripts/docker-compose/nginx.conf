user nginx;
worker_processes  auto;

pid /code/logs/nginx.pid;

events {
	multi_accept on;
	worker_connections 5120;
	use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    gzip on;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    gzip_vary on;
    gzip_proxied any;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen *:80;

        error_log /code/logs/nginx-error.log;
        access_log /code/logs/nginx-access.log main buffer=32k;

        location / {
            uwsgi_pass channels_uwsgi:7000;
            include /etc/nginx/uwsgi_params;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            include /code/devscripts/docker-compose/nginx-security-headers.conf;
        }

        location /socket/ {
            proxy_pass http://channels_sd:9999/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 120;
            proxy_connect_timeout 120;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            include /code/devscripts/docker-compose/nginx-security-headers.conf;
        }

        location /static {
            alias /code/static_root;
            expires 30d;
            add_header Pragma "public";
            add_header Cache-Control "public";
            include /code/devscripts/docker-compose/nginx-security-headers.conf;
        }

        location /media {
            alias /code/media_root;
            include /code/devscripts/docker-compose/nginx-security-headers.conf;
        }

        # Turn off logging for files that are always grabbed
        location = /(favicon.ico|robots.txt|sitemap.xml) {
            alias /code/static_root;
            access_log off;
            log_not_found off;
            include /code/devscripts/docker-compose/nginx-security-headers.conf;
        }

        #  deny access to all .invisible files
        location ~ /\. { deny  all; access_log off; log_not_found off; }
    }
}